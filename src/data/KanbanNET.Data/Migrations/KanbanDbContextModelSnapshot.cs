// <auto-generated />
using System;
using KanbanNET.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KanbanNET.Data.Migrations
{
    [DbContext(typeof(KanbanDbContext))]
    partial class KanbanDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KanbanNET.Services.Entities.Board", b =>
                {
                    b.Property<Guid>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("BoardId");

                    b.ToTable("Boards", (string)null);
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.BoardUsuario", b =>
                {
                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.HasKey("BoardId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("BoardUsuario");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.Card", b =>
                {
                    b.Property<Guid>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardListaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.Property<short>("Ordem")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CardId");

                    b.HasIndex("CardListaId");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.CardComentario", b =>
                {
                    b.Property<Guid>("CardComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("ntext");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CardComentarioId");

                    b.HasIndex("CardId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CardComentarios", (string)null);
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.CardLista", b =>
                {
                    b.Property<Guid>("CardListaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Ordem")
                        .HasColumnType("smallint");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CardListaId");

                    b.HasIndex("BoardId");

                    b.ToTable("CardListas", (string)null);
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.Usuario", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.BoardUsuario", b =>
                {
                    b.HasOne("KanbanNET.Services.Entities.Board", null)
                        .WithMany("BoardsUsuarios")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanNET.Services.Entities.Usuario", null)
                        .WithMany("BoardUsuario")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.Card", b =>
                {
                    b.HasOne("KanbanNET.Services.Entities.CardLista", "CardLista")
                        .WithMany("Cards")
                        .HasForeignKey("CardListaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardLista");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.CardComentario", b =>
                {
                    b.HasOne("KanbanNET.Services.Entities.Card", "Card")
                        .WithMany("Comentarios")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KanbanNET.Services.Entities.Usuario", "Usuario")
                        .WithMany("CardComentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.CardLista", b =>
                {
                    b.HasOne("KanbanNET.Services.Entities.Board", "Board")
                        .WithMany("CardListas")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.Board", b =>
                {
                    b.Navigation("BoardsUsuarios");

                    b.Navigation("CardListas");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.Card", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.CardLista", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("KanbanNET.Services.Entities.Usuario", b =>
                {
                    b.Navigation("BoardUsuario");

                    b.Navigation("CardComentarios");
                });
#pragma warning restore 612, 618
        }
    }
}
